@model IPagedList<NoteDto>
@{
    Layout = null;
}

@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList;
@using X.PagedList.Mvc.Common


<!doctype html>
<html class="no-js" lang="">

<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title></title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="manifest" href="site.webmanifest">
    <link rel="apple-touch-icon" href="icon.png">
    <!-- Place favicon.ico in the root directory -->

    <link rel="stylesheet" href="css/normalize.css">
    <link rel="stylesheet" href="css/main.css">

    <link href="~/node/highlightjs/styles/vs2015.css" rel="stylesheet" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js"></script>

    <script>
        hljs.initHighlightingOnLoad();
    </script>

</head>

<body>
    <!--[if lte IE 9]>
        <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience and security.</p>
    <![endif]-->
    <!-- Add your site or application content here -->
    <pre>
        <code class="cs">
            (function(factory) {

            // Find the global object for export to both the browser and web workers.
            var globalObject = typeof window === 'object' && window ||
            typeof self === 'object' && self;

            // Setup highlight.js for different environments. First is Node.js or
            // CommonJS.
            if(typeof exports !== 'undefined') {
            factory(exports);
            } else if(globalObject) {
            // Export hljs globally even when using AMD for cases when this script
            // is loaded with others that may still expect a global hljs.
            globalObject.hljs = factory({});

            // Finally register the global hljs with AMD.
            if(typeof define === 'function' && define.amd) {
            define([], function() {
            return globalObject.hljs;
            });
            }
            }

            }(function(hljs) {
            // Convenience variables for build-in objects
            var ArrayProto = [],
            objectKeys = Object.keys;

            // Global internal variables used within the highlight.js library.
            var languages = {},
            aliases   = {};

            // Regular expressions used throughout the highlight.js library.
            var noHighlightRe    = /^(no-?highlight|plain|text)$/i,
            languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i,
            fixMarkupRe      = /((^(<[^>
                ]+>|\t|)+|(?:\n)))/gm;

                var spanEndTag = '</span>';

                // Global options used when within external APIs. This is modified when
                // calling the `hljs.configure` function.
                var options = {
                classPrefix: 'hljs-',
                tabReplace: null,
                useBR: false,
                languages: undefined
                };
        </code>
</pre>
    <nav>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
            new PagedListRenderOptions {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },
                ContainerDivClasses = new List<string> { "pagination-sm" },
                DisplayLinkToFirstPage = PagedListDisplayMode.Always
            })
    </nav>



<script src="js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <script>window.jQuery || document.write('<script src="js/vendor/jquery-3.3.1.min.js"><\/script>')</script>
    <script src="js/plugins.js"></script>
    <script src="js/main.js"></script>

    <!-- Google Analytics: change UA-XXXXX-Y to be your site's ID. -->
    <script>
        window.ga = function () { ga.q.push(arguments) }; ga.q = []; ga.l = +new Date;
        ga('create', 'UA-XXXXX-Y', 'auto'); ga('send', 'pageview')
    </script>
    <script src="https://www.google-analytics.com/analytics.js" async defer></script>
</body>

</html>